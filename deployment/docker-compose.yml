
services:
  physgrad:
    build:
      context: ..
      dockerfile: Dockerfile
    image: physgrad:latest
    container_name: physgrad-compute
    restart: unless-stopped
    ports:
      - "8080:8080"  # API
      - "8081:8081"  # Metrics
      - "8082:8082"  # Health
    environment:
      - PHYSICS_TIMESTEP=0.001
      - MAX_PARTICLES=1000000
      - CUDA_DEVICE_COUNT=auto
      - THREADS_PER_BLOCK=256
      - BLOCKS_PER_GRID=auto
      - MEMORY_POOL_SIZE=2GB
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - METRICS_ENABLED=true
      - API_PORT=8080
      - METRICS_PORT=8081
      - HEALTH_PORT=8082
      - DATA_PATH=/app/data
      - RESULTS_PATH=/app/results
      - LOGS_PATH=/app/logs
    volumes:
      - physgrad_data:/app/data
      - physgrad_results:/app/results
      - physgrad_logs:/app/logs
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "/app/deployment/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - physgrad-network

  prometheus:
    image: prom/prometheus:latest
    container_name: physgrad-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - physgrad-network

  grafana:
    image: grafana/grafana:latest
    container_name: physgrad-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=physgrad123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - physgrad-network

volumes:
  physgrad_data:
    driver: local
  physgrad_results:
    driver: local
  physgrad_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  physgrad-network:
    driver: bridge